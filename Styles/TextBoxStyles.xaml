<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="clr-namespace:Glushkov89.DDPicker">

	<ControlTemplate x:Key="TextBoxTemplate"
					 TargetType="{x:Type TextBox}">
		<StackPanel>
			<Label   x:Name="label"
					 Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LabelText}"
					 FontSize="12"
					 Margin="0 0 0 3"
					 Padding="0 0 0 0" />
			<Border x:Name="border"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}"
					Background="{TemplateBinding Background}"
					CornerRadius="4"
					Padding="10"
					SnapsToDevicePixels="True">
				<ScrollViewer x:Name="PART_ContentHost"
							  Foreground="{TemplateBinding BorderBrush}"
							  Focusable="false"
							  HorizontalScrollBarVisibility="Hidden"
							  VerticalScrollBarVisibility="Hidden" />
			</Border>
		</StackPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Opacity"
						TargetName="border"
						Value="0.5" />
				<Setter Property="Opacity"
						TargetName="label"
						Value="0.5" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Validation.HasError"
							   Value="False" />
					<Condition Property="IsMouseOver"
							   Value="true" />
				</MultiTrigger.Conditions>
				<MultiTrigger.Setters>
					<Setter Property="BorderBrush"
							TargetName="border"
							Value="DarkGray" />
					<Setter Property="Foreground"
							TargetName="label"
							Value="DarkGray" />
					<Setter Property="Foreground"
							Value="Gray" />
				</MultiTrigger.Setters>
			</MultiTrigger>
			<Trigger Property="IsKeyboardFocused"
					 Value="true">
				<Setter Property="BorderBrush"
						TargetName="border"
						Value="Gray" />
				<Setter Property="Foreground"
						TargetName="label"
						Value="Gray" />
				<Setter Property="Foreground"
						Value="Gray" />
			</Trigger>

			<Trigger Property="Validation.HasError"
					 Value="true">
				<Setter Property="BorderBrush"
						Value="Red" />
				<Setter Property="Foreground"
						Value="Red" />
			</Trigger>

			<!--<Trigger Property="Validation.HasError"
					 Value="False">
			</Trigger>-->
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="TextBoxTemplateStyle"
		   TargetType="{x:Type TextBox}">

		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="BorderBrush"
				Value="DarkGray" />
		<Setter Property="Foreground"
				Value="DarkGray" />
		<Setter Property="FontSize"
				Value="15" />
		<Setter Property="BorderThickness"
				Value="2" />
		<Setter Property="KeyboardNavigation.TabNavigation"
				Value="None" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}" />
		<Setter Property="AllowDrop"
				Value="true" />
		<Setter Property="ScrollViewer.PanningMode"
				Value="VerticalFirst" />
		<Setter Property="Stylus.IsFlicksEnabled"
				Value="False" />
		<Setter Property="Validation.ErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<StackPanel>
						<AdornedElementPlaceholder x:Name="textBox" />
						<ItemsControl ItemsSource="{Binding}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<TextBlock Text="{Binding ErrorContent}"
											   Foreground="Red"
											   FontSize="10" />
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template"
				Value="{StaticResource TextBoxTemplate}" />
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsInactiveSelectionHighlightEnabled"
							   Value="true" />
					<Condition Property="IsSelectionActive"
							   Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="SelectionBrush"
						Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>

	<Style BasedOn="{StaticResource TextBoxTemplateStyle}"
		   TargetType="{x:Type TextBox}"></Style>
</ResourceDictionary>